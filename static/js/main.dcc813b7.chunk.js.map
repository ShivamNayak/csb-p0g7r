{"version":3,"sources":["components/CourseAdd.js","components/DeleteTask.js","components/ListCourse.js","App.js","index.js"],"names":["CourseAdd","props","useState","newTaskObject","setNewTaskObject","className","onSubmit","event","preventDefault","target","value","adderFunction","alert","onChange","id","items","name","type","DeleteTask","setTaskToDel","onClick","takeTaskId","ListCourse","taskToDel","delTaskFunction","console","log","length","map","x","App","existingTasks","setExistingTasks","newTask","previousState","taskId","newTaskSet","filter","element","index","arr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAkCeA,EAhCG,SAACC,GACjB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAmBA,OACE,sBAAKC,UAAU,aAAf,UACE,oBAAIA,UAAU,SAAd,4BACA,uBAAMC,SAdY,SAACC,GACrBA,EAAMC,iBAEND,EAAME,OAAO,GAAGC,MAAQ,GACpBP,EAAeF,EAAMU,cAAcR,GAErCS,MAAM,6BAERR,EAAiB,KAMgBC,UAAU,OAAzC,UACE,uBAAOA,UAAU,cAAcQ,SArBX,SAACN,GACzBH,EAAiB,CAAEU,GAAIb,EAAMc,MAAQ,EAAGC,KAAMT,EAAME,OAAOC,WAqBvD,wBAAQO,KAAK,SAASZ,UAAU,gBAAhC,+BCXOa,G,KAbI,SAACjB,GAClB,MAAkCC,mBAAS,IAA3C,mBAAkBiB,GAAlB,WAMA,OACE,qBAAKd,UAAU,OAAOe,QANH,SAACb,GACpBN,EAAMoB,WAAWpB,EAAMc,MAAMD,IAC7BK,EAAalB,EAAMc,MAAMD,KAIzB,SACE,mBAAGT,UAAU,cAAb,SAA4BJ,EAAMc,MAAMC,WCmB/BM,G,MA1BI,SAACrB,GAClB,IAAMsB,EAAY,SAACT,GACjBb,EAAMuB,gBAAgBV,IAIxB,OADAW,QAAQC,IAAIzB,EAAM0B,QACC,GAAf1B,EAAMc,MAEN,qBAAKV,UAAU,qBAAf,SACE,mBAAGA,UAAU,gBAAb,6DAMGJ,EAAMc,MAAMa,KAAI,SAACC,GAAD,OAErB,aADA,CACC,EAAD,CACEd,MAAOc,EACPxB,UAAU,OAEVgB,WAAYE,GADPM,EAAEf,SCWAgB,MA/Bf,WACE,MAA0C5B,mBAAS,CACjD,CAAEY,GAAI,EAAGE,KAAM,sCADjB,mBAAOe,EAAP,KAAsBC,EAAtB,KAqBA,OACE,sBAAK3B,UAAU,MAAf,UAEE,cAAC,EAAD,CAAWM,cAPM,SAACsB,GACpBD,GAAiB,SAACE,GAAD,4BAAuBA,GAAvB,CAAsCD,QAMblB,MAAOgB,EAAcJ,SAC7D,cAAC,EAAD,CAAYZ,MAAOgB,EAAeP,gBApBpB,SAACW,GAEjB,IAAMC,EAAaL,EAAcM,QAAO,SAACC,EAASC,EAAOC,GACvD,OAAOF,EAAQxB,KAAOqB,KAGxBH,EAAiBI,UCZrBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dcc813b7.chunk.js","sourcesContent":["import react, { useState } from \"react\";\r\nimport \"./CourseAdd.css\";\r\nconst CourseAdd = (props) => {\r\n  const [newTaskObject, setNewTaskObject] = useState(\"\");\r\n\r\n  const taskChangeHandler = (event) => {\r\n    setNewTaskObject({ id: props.items + 1, name: event.target.value });\r\n    // console.log(\r\n    //   \"new obj, id:\" + (props.items + 1) + \" name: \" + event.target.value\r\n    // );\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    // console.log(event);\r\n    event.target[0].value = \"\";\r\n    if (newTaskObject) props.adderFunction(newTaskObject);\r\n    else {\r\n      alert(\"Please enter a task first\");\r\n    }\r\n    setNewTaskObject(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"goal-adder\">\r\n      <h2 className=\"header\">Set your Goals</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <input className=\"placeholder\" onChange={taskChangeHandler}></input>\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Add a task\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default CourseAdd;\r\n","import react, { useState } from \"react\";\r\nimport \"./ListCourse.css\";\r\nimport \"./ListCourse.css\";\r\nconst DeleteTask = (props) => {\r\n  const [taskToDel, setTaskToDel] = useState(\"\");\r\n  const clickHandler = (event) => {\r\n    props.takeTaskId(props.items.id);\r\n    setTaskToDel(props.items.id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"task\" onClick={clickHandler}>\r\n      <p className=\"taskContent\">{props.items.name}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default DeleteTask;\r\n","import react from \"react\";\r\nimport \"./DeleteTask\";\r\nimport DeleteTask from \"./DeleteTask\";\r\nimport \"./ListCourse.css\";\r\nimport \"./Congrats.css\";\r\nconst ListCourse = (props) => {\r\n  const taskToDel = (id) => {\r\n    props.delTaskFunction(id);\r\n    // console.log(id);\r\n  };\r\n  console.log(props.length);\r\n  if (props.items == 0)\r\n    return (\r\n      <div className=\"finisher-container\">\r\n        <p className=\"finisher-text\">\r\n          Congratulations on completing all your tasks!\r\n        </p>\r\n      </div>\r\n    );\r\n  else\r\n    return props.items.map((x) => (\r\n      // {/* DeleteTask components doesn't deletes, it renders existing task and take the id of task to be deleted*/}\r\n      <DeleteTask\r\n        items={x}\r\n        className=\"task\"\r\n        key={x.id}\r\n        takeTaskId={taskToDel}\r\n      />\r\n      // {/* <p className=\"taskContent\">{x.name}</p> */}\r\n    ));\r\n};\r\nexport default ListCourse;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport CourseAdd from \"./components/CourseAdd\";\nimport ListCourse from \"./components/ListCourse\";\n\nfunction App() {\n  const [existingTasks, setExistingTasks] = useState([\n    { id: 1, name: \"Click on me if you have finished\" }\n    // { id: 2, name: \"create some tasks\" },\n  ]);\n\n  const TasktoDel = (taskId) => {\n    // console.log(taskId);\n    const newTaskSet = existingTasks.filter((element, index, arr) => {\n      return element.id !== taskId;\n    });\n\n    setExistingTasks(newTaskSet);\n    // if (newTaskSet.length == 0)\n    //   alert(\"Congratulations! You have completed all your goals\");\n    // setExistingTasks((previousState) => [...previousState]);\n  };\n\n  const newTaskAdder = (newTask) => {\n    setExistingTasks((previousState) => [...previousState, newTask]);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <p>Hey</p> */}\n      <CourseAdd adderFunction={newTaskAdder} items={existingTasks.length} />\n      <ListCourse items={existingTasks} delTaskFunction={TasktoDel} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}